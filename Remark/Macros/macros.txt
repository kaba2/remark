Macros
======

[[Parent]]: remark.txt

Macros are functions that map input text in Remark syntax to 
output text in Remark syntax. To introduce macros, we shall take 
the Comment macro as an example. This macro takes in arbitrary input 
but does not output anything. It can be used to comment the Remark source. 

Macro invocation
----------------

A macro can be invoked in three ways: with no parameters,
with a one-line parameter, or with a multi-line parameter.
The Comment macro is invoked with no parameters as follows:

	[[Comment]]
	
With a one-line parameter you would write like this:

	[[Comment]]: This is a one-line parameter.
	
And with a multi-line parameter you would write like this:

	[[Comment]]:
		This is a multi-line parameter
		which can use as many rows as needed.
		
The parameter is multi-line whenever:

 * There is the ':' mark after the macro invocation.

 * There is only white-space after the ':' on the same row.

The range of a multi-line parameter extends downwards
until there is a line which contains non-white-space
characters _and_ which has indentation equal to or less than
the indentation of the macro invocation. For example:
    
	[[Comment]]:
		This is a multi-line parameter
		which can use as many rows as needed.
		
		This is still part of the multi-line parameter.
		
	This is not part of the Comment parameter.

Some details
------------

 * A multi-line parameter with a single row works equivalently
to a one-line parameter. A multi-line parameter
with no rows works equivalently to as if no parameters 
were given. 

 * The functionality of macros is implemented as Python classes.
During its action, a macro has access to the whole
functionality offered by Remark. Most importantly macros
have access to the documentation tree. This way macros
are able to produce the correct descriptions and link
targets which have been deduced from the Remark source files.

 * No macro expansions are done for the parameter of a macro.
 
 * No macro expansions are done for verbatim content.

 