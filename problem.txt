Problems and solutions
======================

[[Parent]]: user_documentation.txt

SVG-images that do not get loaded
---------------------------------

If an SVG-image does not get loaded when you run a Remark-generated
html-file from a server, but it does get loaded when you run it from
the hard-disk, then the probable cause is that the server does not
have the MIME-type correctly assigned for the .svg files. For example, 
for the `lighttpd` web-server, you should modify the configuration file
`/etc/lighttpd/mime-types.conf` to contain the line

	".svg"          =>      "image/svg+xml"

The former string is the file-extension of the SVG-image file format, 
while the latter is its MIME-type.

Files that are not UTF-8 encoded
--------------------------------

If you pass Remark a file that is not a valid UTF-8 encoding, Remark 
emits a warning and assumes that the file has been encoded in Latin-1. 
This process is a bit inefficient since in this case the file has to be 
read twice.  

Mathematical expressions in wrong places
----------------------------------------

The AsciiMathML Javascript library affects the whole generated page and 
can't be scoped. This is problematic in some cases. For example, in Python 
code an empty string is denoted by two subsequent '. This will be erased 
from the output because AsciiMathML interprets it as a start of a 
mathematical expression. Remark solves this problem partially by making 
it configurable per document type whether AsciiMath should be interpreted 
or not: currently only documentation files (.txt) are interpreted. This
way, for example, Python files can be shown correctly in the CodeView
document type.

Verbatim content after a multi-line parameter
---------------------------------------------

Indentation has a double role. It is used both to denote
verbatim content in Markdown and to denote the range of a multi-line
parameter for a macro in Remark. Therefore, if one wants to write
verbatim content directly after a multi-line parameter, there must
be some way to tell Remark where the multi-line parameter
ends and the verbatim content starts. This can be achieved by
using the [Verbatim][Verbatim_Macro] macro. For example:

	[[CppCode]]:
		int square(int x)
		{
			return x * x;
		}
		
		int cube(int x)
		{
			return x * x * x;
		}
	
	[[Verbatim]]:
		Verbatim content here. 

[Verbatim_Macro]: [[Ref]]: Verbatim_Macro.txt

Injecting html to the head section
----------------------------------

Html-code can be injected into the head-section of a html-file
by storing text in the `html_head` tag.


