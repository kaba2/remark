Problems and solutions
======================

[[Parent]]: remark.txt

What will happen if I pass a non-UTF-8 encoded file to Remark?
--------------------------------------------------------------

If you pass Remark a file that is not UTF-8 encoded, Remark
emits a warning and assumes the file has been encoded in Latin-1.
This process is a bit inefficient since in this case the file has 
to be read twice. Rather than relying on this backup scheme,
encode your input files UTF-8 to begin with. 

It seems some expressions in source code and verbatim content 
are incorrectly interpreted as mathematical expressions. Why is this? 
---------------------------------------------------------------------

Unfortunately, the AsciiMathML Javascript library affects the whole 
generated page and can't be scoped. This is problematic in some cases. 
For example, in Python code an empty string is denoted by two 
subsequent '. This will be erased from the output because AsciiMathML 
interprets it as a start of a mathematical expression.
It would be nice to have a Python library that did AsciiMath to
MathML conversion off-line during Remark's generation.

How can I write verbatim content directly after a multi-line parameter?
-----------------------------------------------------------------------

Indentation has a double role. It is used both to denote
verbatim content in Markdown and to denote the range of a multi-line
parameter for a macro in Remark. Therefore, if one wants to write
verbatim content directly after a multi-line parameter, there must
be some way to tell Remark where the multi-line parameter
ends. A way to solve this problem without including
extra content is to use the Comment macro either without
a parameter or with a one-line parameter. For example:

	[[CppCode]]:
		int square(int x)
		{
			return x * x;
		}
		
		int cube(int x)
		{
			return x * x * x;
		}
	
	[[Comment]]: This comment marks the end of the parameter.
	
		Verbatim content here. 

We expect this to be a rather rare problem. Most of the time
verbatim content is preceded by an explanation which at the
same time marks the end of a parameter. For example:
		
	[[CppCode]:
		int square(int x)
		{
			return x * x;
		}
		
		int cube(int x)
		{
			return x * x * x;
		}

	This sentence marks the end of the parameter.
	Here's some verbatim content:
	
		Verbatim content here. 
	
This same technique can also be used to produce subsequent regions 
of verbatim content.
